(set-logic QF_BV)
(set-option :produce-models true)
(declare-const X0_0 (_ BitVec 4))
(declare-const X0_1 (_ BitVec 4))
(declare-const X0_2 (_ BitVec 4))
(declare-const X1_0 (_ BitVec 4))
(declare-const X1_1 (_ BitVec 4))
(declare-const X1_2 (_ BitVec 4))
(declare-const X2_0 (_ BitVec 4))
(declare-const X2_1 (_ BitVec 4))
(declare-const X2_2 (_ BitVec 4))
(assert (bvule (_ bv1 4) X0_0))
(assert (bvule X0_0 (_ bv3 4)))
(assert (bvule (_ bv1 4) X1_0))
(assert (bvule X1_0 (_ bv3 4)))
(assert (bvule (_ bv1 4) X2_0))
(assert (bvule X2_0 (_ bv3 4)))
(assert (bvule (_ bv1 4) X0_1))
(assert (bvule X0_1 (_ bv3 4)))
(assert (bvule (_ bv1 4) X1_1))
(assert (bvule X1_1 (_ bv3 4)))
(assert (bvule (_ bv1 4) X2_1))
(assert (bvule X2_1 (_ bv3 4)))
(assert (bvule (_ bv1 4) X0_2))
(assert (bvule X0_2 (_ bv3 4)))
(assert (bvule (_ bv1 4) X1_2))
(assert (bvule X1_2 (_ bv3 4)))
(assert (bvule (_ bv1 4) X2_2))
(assert (bvule X2_2 (_ bv3 4)))
(assert (not (= X0_0 X1_0)))
(assert (not (= X0_0 X2_0)))
(assert (not (= X1_0 X0_0)))
(assert (not (= X1_0 X2_0)))
(assert (not (= X2_0 X0_0)))
(assert (not (= X2_0 X1_0)))
(assert (not (= X0_1 X1_1)))
(assert (not (= X0_1 X2_1)))
(assert (not (= X1_1 X0_1)))
(assert (not (= X1_1 X2_1)))
(assert (not (= X2_1 X0_1)))
(assert (not (= X2_1 X1_1)))
(assert (not (= X0_2 X1_2)))
(assert (not (= X0_2 X2_2)))
(assert (not (= X1_2 X0_2)))
(assert (not (= X1_2 X2_2)))
(assert (not (= X2_2 X0_2)))
(assert (not (= X2_2 X1_2)))
(assert (not (= X0_0 X0_1)))
(assert (not (= X0_0 X0_2)))
(assert (not (= X0_1 X0_0)))
(assert (not (= X0_1 X0_2)))
(assert (not (= X0_2 X0_0)))
(assert (not (= X0_2 X0_1)))
(assert (not (= X1_0 X1_1)))
(assert (not (= X1_0 X1_2)))
(assert (not (= X1_1 X1_0)))
(assert (not (= X1_1 X1_2)))
(assert (not (= X1_2 X1_0)))
(assert (not (= X1_2 X1_1)))
(assert (not (= X2_0 X2_1)))
(assert (not (= X2_0 X2_2)))
(assert (not (= X2_1 X2_0)))
(assert (not (= X2_1 X2_2)))
(assert (not (= X2_2 X2_0)))
(assert (not (= X2_2 X2_1)))
(assert (or (= (bvadd X1_0 (_ bv2 4)) X0_0) (= (bvadd X0_0 (_ bv2 4)) X1_0)))
(assert (= (_ bv2 4) X2_0))
(assert (or (= (bvmul X0_2 (_ bv2 4)) X0_1) (= (bvmul X0_1 (_ bv2 4)) X0_2)))
(assert (or (= (bvmul X2_1 (_ bv3 4)) X1_1) (= (bvmul X1_1 (_ bv3 4)) X2_1)))
(assert (or (= (bvadd X2_2 (_ bv1 4)) X1_2) (= (bvadd X1_2 (_ bv1 4)) X2_2)))
(check-sat)
(get-model)
